#foreign_system_import "d3d11.lib";
#foreign_system_import "d3dcompiler.lib";

proc D3D11CreateDevice(
                      pAdapter           : ^IDXGIAdapter,
                      DriverType         : UINT,
                      Software           : HMODULE,
                      Flags              : UINT,
                      pFeatureLevels     : ^D3D_FEATURE_LEVEL,
                      FeatureLevels      : u32,
                      SDKVersion         : u32,
                      ppDevice           : ID3D11Device,
                      pFeatureLevel      : ^D3D_FEATURE_LEVEL,
                      ppImmediateContext : ID3D11DeviceContext) : HRESULT #foreign "d3d11";

proc D3D11CreateDeviceAndSwapChain(
                      pAdapter           : ^IDXGIAdapter,
                      DriverType         : UINT,
                      Software           : HMODULE,
                      Flags              : UINT,
                      pFeatureLevels     : ^D3D_FEATURE_LEVEL,
                      FeatureLevels      : u32,
                      SDKVersion         : u32,
                      pSwapChainDesc     : ^DXGI_SWAP_CHAIN_DESC,
                      ppSwapChain        : ^^IDXGISwapChain,
                      ppDevice           : ^^ID3D11Device,
                      pFeatureLevel      : ^D3D_FEATURE_LEVEL,
                      ppImmediateContext : ^^ID3D11DeviceContext) : HRESULT #foreign "d3d11";

proc D3DCompileFromFile(
             pFileName   : LPCWSTR,
             pDefines    : rawptr,//^D3D_SHADER_MACRO,
             pInclude    : ^ID3DInclude,
             pEntrypoint : cstring,
             pTarget     : cstring,
             Flags1      : UINT,
             Flags2      : UINT,
             ppCode      : ^^ID3D10Blob,
             ppErrorMsgs : ^^ID3D10Blob) : HRESULT #foreign "d3dcompiler";

proc D3DCompile(
            pSrcData    : cstring,
            SrcDataSize : uint,
            pSourceName : cstring,
            pDefines    : rawptr,
            pInclude    : ^ID3DInclude,
            pEntrypoint : cstring,
            pTarget     : cstring,
            Flags1      : UINT,
            Flags2      : UINT,
            ppCode      : ^^ID3D10Blob,
            ppErrorMsgs : ^^ID3D10Blob) : HRESULT #foreign "d3dcompiler";

const D3D11_SDK_VERSION := 7;

const UINT8             := u8;
const UINT16            := u16;
const UINT64            := u64;
const USHORT            := u16;
const ULONG             := u32;
const ULONGLONG         := u64;
const LUID              := _LUID;
const D3D11_RECT        := RECT;
const LPVOID            := rawptr;
const D3D_FEATURE_LEVEL := UINT;
const D3DCOLORVALUE     := _D3DCOLORVALUE;
const DXGI_RGBA         := D3DCOLORVALUE;

const DXGI_FORMAT                            := UINT;
const D3D11_PRIMITIVE_TOPOLOGY               := UINT;
const D3D11_DEVICE_CONTEXT_TYPE              := UINT;
const D3D11_BLEND                            := UINT;
const D3D11_BLEND_OP                         := UINT;
const D3D11_FILL_MODE                        := UINT;
const D3D11_VIDEO_DECODER_BUFFER_TYPE        := UINT;
const D3D11_CULL_MODE                        := UINT;
const D3D11_COUNTER_TYPE                     := UINT;
const D3D11_USAGE                            := UINT;
const D3D11_RESOURCE_DIMENSION               := UINT;
const D3D11_SRV_DIMENSION                    := UINT;
const D3D11_UAV_DIMENSION                    := UINT;
const D3D11_RTV_DIMENSION                    := UINT;
const D3D11_QUERY                            := UINT;
const D3D11_MAP                              := UINT;
const D3D11_FEATURE                          := UINT;
const D3D11_FENCE_FLAG                       := UINT;
const D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE  := UINT;
const DXGI_COLOR_SPACE_TYPE                  := UINT;
const D3D11_VIDEO_FRAME_FORMAT               := UINT;
const D3D11_VIDEO_PROCESSOR_OUTPUT_RATE      := UINT;
const D3D11_VIDEO_PROCESSOR_STEREO_FORMAT    := UINT;
const D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE := UINT;
const D3D11_VIDEO_PROCESSOR_FILTER           := UINT;
const D3D11_VIDEO_PROCESSOR_ROTATION         := UINT;
const D3D11_CRYPTO_SESSION_STATUS            := UINT;
const DXGI_HDR_METADATA_TYPE                 := UINT;
const D3D11_AUTHENTICATED_CHANNEL_TYPE       := UINT;
const DXGI_MODE_ROTATION                     := UINT;
const DXGI_SWAP_EFFECT                       := UINT;
const DXGI_MODE_SCANLINE_ORDER               := UINT;
const DXGI_MODE_SCALING                      := UINT;
const DXGI_RESIDENCY                         := UINT;
const DXGI_OFFER_RESOURCE_PRIORITY           := UINT;
const DXGI_GRAPHICS_PREEMPTION_GRANULARITY   := UINT;
const DXGI_COMPUTE_PREEMPTION_GRANULARITY    := UINT;
const DXGI_MEMORY_SEGMENT_GROUP              := UINT;
const DXGI_MULTIPLANE_OVERLAY_YCbCr_FLAGS    := UINT;
const DXGI_DEBUG_ID                          := UINT;
const DXGI_RECLAIM_RESOURCE_RESULTS          := UINT;

const PFN_DESTRUCTION_CALLBACK       := proc(pData: rawptr);
const DXGI_INFO_QUEUE_MESSAGE_ID           := i32;
const D3D11_AUTHENTICATED_PROTECTION_FLAGS := u32;
const APP_DEPRECATED_HRESULT               := HRESULT;

const S_FALSE := 1;

const D3D11_ERROR_FILE_NOT_FOUND                               := 0x887C002;
const D3D11_ERROR_TOO_MANY_UNIQUE_STATE_OBJECTS                := 0x887C0001;
const D3D11_ERROR_TOO_MANY_UNIQUE_VIEW_OBJECTS                 := 0x887C0003;
const D3D11_ERROR_DEFERRED_CONTEXT_MAP_WITHOUT_INITIAL_DISCARD := 0x887C0004;
const D3DERR_INVALIDCALL                                       := 0x887A0001;
const D3DERR_WASSTILLDRAWING                                   := 0x887A000A;

const DXGI_ERROR_ACCESS_DENIED                := 0x887A002B;
const DXGI_ERROR_ACCESS_LOST                  := 0x887A0026;
const DXGI_ERROR_ALREADY_EXISTS               := 0x887A0036;
const DXGI_ERROR_CANNOT_PROTECT_CONTENT       := 0x887A002A;
const DXGI_ERROR_DEVICE_HUNG                  := 0x887A0006;
const DXGI_ERROR_DEVICE_REMOVED               := 0x887A0005;
const DXGI_ERROR_DEVICE_RESET                 := 0x887A0007;
const DXGI_ERROR_DRIVER_INTERNAL_ERROR        := 0x887A0020;
const DXGI_ERROR_FRAME_STATISTICS_DISJOINT    := 0x887A000B;
const DXGI_ERROR_GRAPHICS_VIDPN_SOURCE_IN_USE := 0x887A000C;
const DXGI_ERROR_INVALID_CALL                 := 0x887A0001;
const DXGI_ERROR_MORE_DATA                    := 0x887A0003;
const DXGI_ERROR_NAME_ALREADY_EXISTS          := 0x887A002C;
const DXGI_ERROR_NONEXCLUSIVE                 := 0x887A0021;
const DXGI_ERROR_NOT_CURRENTLY_AVAILABLE      := 0x887A0022;
const DXGI_ERROR_NOT_FOUND                    := 0x887A0002;
const DXGI_ERROR_REMOTE_CLIENT_DISCONNECTED   := 0x887A0023;
const DXGI_ERROR_REMOTE_OUTOFMEMORY           := 0x887A0024;
const DXGI_ERROR_RESTRICT_TO_OUTPUT_STALE     := 0x887A0029;
const DXGI_ERROR_SDK_COMPONENT_MISSING        := 0x887A002D;
const DXGI_ERROR_SESSION_DISCONNECTED         := 0x887A0028;
const DXGI_ERROR_UNSUPPORTED                  := 0x887A0004;
const DXGI_ERROR_WAIT_TIMEOUT                 := 0x887A0027;
const DXGI_ERROR_WAS_STILL_DRAWING            := 0x887A000A;

struct ID3DInclude {
    close: proc(data: rawptr) : HRESULT;
    open:  proc(include_type: D3DIncludeType, file_name: ^byte, parent_data: rawptr, out_data: ^rawptr, out_bytes: ^u32) : HRESULT;
}

enum D3DIncludeType i32 {
    Local;
    System;
    D3D10_Local;
    D3D10_System;
    Force_Dword;
}

const D3DCOMPILE_DEBUG                              := 1 << 0;
const D3DCOMPILE_SKIP_VALIDATION                    := 1 << 1;
const D3DCOMPILE_SKIP_OPTIMIZATION                  := 1 << 2;
const D3DCOMPILE_PACK_MATRIX_ROW_MAJOR              := 1 << 3;
const D3DCOMPILE_PACK_MATRIX_COLUMN_MAJOR           := 1 << 4;
const D3DCOMPILE_PARTIAL_PRECISION                  := 1 << 5;
const D3DCOMPILE_FORCE_VS_SOFTWARE_NO_OPT           := 1 << 6;
const D3DCOMPILE_FORCE_PS_SOFTWARE_NO_OPT           := 1 << 7;
const D3DCOMPILE_NO_PRESHADER                       := 1 << 8;
const D3DCOMPILE_AVOID_FLOW_CONTROL                 := 1 << 9;
const D3DCOMPILE_PREFER_FLOW_CONTROL                := 1 << 10;
const D3DCOMPILE_ENABLE_STRICTNESS                  := 1 << 11;
const D3DCOMPILE_ENABLE_BACKWARDS_COMPATIBILITY     := 1 << 12;
const D3DCOMPILE_IEEE_STRICTNESS                    := 1 << 13;
const D3DCOMPILE_OPTIMIZATION_LEVEL0                := 1 << 14;
const D3DCOMPILE_OPTIMIZATION_LEVEL1                := 0;
const D3DCOMPILE_OPTIMIZATION_LEVEL2                := (1 << 14) | (1 << 15);
const D3DCOMPILE_OPTIMIZATION_LEVEL3                := 1 << 15;
const D3DCOMPILE_WARNINGS_ARE_ERRORS                := 1 << 18;
const D3DCOMPILE_RESOURCES_MAY_ALIAS                := 1 << 19;
const D3DCOMPILE_ENABLE_UNBOUNDED_DESCRIPTOR_TABLES := 1 << 20;
const D3DCOMPILE_ALL_RESOURCES_BOUND                := 1 << 21;

const DXGI_USAGE_SHADER_INPUT         := 0x00000010;
const DXGI_USAGE_RENDER_TARGET_OUTPUT := 0x00000020;
const DXGI_USAGE_BACK_BUFFER          := 0x00000040;
const DXGI_USAGE_SHARED               := 0x00000080;
const DXGI_USAGE_READ_ONLY            := 0x00000100;
const DXGI_USAGE_DISCARD_ON_PRESENT   := 0x00000200;
const DXGI_USAGE_UNORDERED_ACCESS     := 0x00000400;

// struct IUnknown {
//     vtbl: ^IUnknown_vtbl(IUnknown);
// }

// struct IUnknown_vtbl!($T: typeid) {
//     query_interface: proc(^T, ^rawptr) : HRESULT;
//     add_ref:         proc(^T) : u32;
//     release:         proc(^T) : u32;
// }

struct SIZE {
    cx: u32;
    cy: u32;
}