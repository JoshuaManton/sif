#include "core:basic.sif"
#include "core:sdl2.sif"

proc main() : i32 {
    if (SDL_Init(Init_Flags.Video) < 0) {
        log_sdl_error();
        return 1;
    }

    var name = "My Fancy Window";
    var window = SDL_CreateWindow(&name[0], cast(i32, Window_Pos.Undefined), cast(i32, Window_Pos.Undefined), 1920, 1080, Window_Flags.Shown | Window_Flags.Resizable);
    if (window == null) {
        log_sdl_error();
        return 1;
    }

    var renderer = SDL_CreateRenderer(window, -1, 0);
    var screen_surface = SDL_GetWindowSurface(window);

    var evt: SDL_Event;
    var quit = false;
    while (!quit) {
        while (SDL_PollEvent(&evt) != 0) {
            if (evt.type == Event_Type.Quit) {
                quit = true;
                break;
            }

            if (evt.type == Event_Type.Window_Event) {
                if (evt.window.event == Window_Event_ID.Close) {
                    quit = true;
                    break;
                }
            }
        }

        var window_width: i32;
        var window_height: i32;
        SDL_GetWindowSize(window, &window_width, &window_height);

        var r = sin(cast(f64, SDL_GetTicks()) * 0.0004);  r *= r;
        var g = sin(cast(f64, SDL_GetTicks()) * 0.0003);  g *= g;
        var b = sin(cast(f64, SDL_GetTicks()) * 0.00025); b *= b;
        SDL_SetRenderDrawColor(renderer, cast(u8, r*255), cast(u8, g*255), cast(u8, b*255), 255);
        SDL_RenderClear(renderer);

        SDL_SetRenderDrawColor(renderer, cast(u8, r/2*255), cast(u8, g/2*255), cast(u8, b/2*255), 255);
        var rect: Rect;
        rect.x = window_width / 2 - 96;
        rect.y = window_height / 2 - 64;
        rect.w = 192;
        rect.h = 128;
        SDL_RenderFillRect(renderer, &rect);

        SDL_RenderPresent(renderer);
        SDL_Delay(16);
    }
}

proc log_sdl_error() {
    var error = SDL_GetError();
    var str = string_ptr(error, cast(i64, strlen(error)));
    print("SDL ERROR: %\n", str.count);
}