var a: [sizeof(typeof(p^))]int;
var p: ^T;
struct T {
    var a: [sizeof(typeof(p))]bool;
}

struct A {
    var b: [4]B;
}

struct B {
    var a: ^A;
}

proc AAA() {
    var aa: A;
    var b: B = aa.b[2];
}

var simple: int;
var pointer: ^int;
var array: [4]int;
var pointer_to_pointer: ^^int;
var array_of_arrays: [4][8]int;
var pointer_to_array: ^[4]int;
var array_of_pointers: [4]^int;
var wack: ^^[4][8]int;
var more_wack: [4][8]^^int;
var still_more_wack: ^[4]^[8]int;
var complicated_garbage: ^^[4]^[8][32]^int;

proc recursion() {
    var b: ^Some_Struct;
    recursion();
}

proc duo_recursion1() {
    duo_recursion2();
}
proc duo_recursion2() {
    var a: Some_Struct;
    duo_recursion1();
}

proc baz(var x: int) {
    foo(x);
}

proc foo(var x: int) {
    bar(1);
    global_var;
    var b: Some_Struct;
    var z: int;
    z = 321;
}
proc bar(var x: int) {
    baz(2);
    var y: ^int;
    var z: int = y^;
    z = 123 + z;
    z = z + 123;
    z = 12 + 12;
}
var global_var: int;
struct Some_Struct {
    var x: int;
}