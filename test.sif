#include "basic.sif"

struct Foo!($T: typeid, $wowza: int) {
    var data: T;
    var arr: [wowza]int;
}

proc pointer_proc(foo: ^Foo!($T, $W)) {
}

proc slice_proc(foo: []Foo!($T, $W)) {
}

proc array_proc(foo: [$N]^Foo!($T, $W)) {
}

proc array_proc_fixed(foo: [4]^Foo!($T, $W)) {
}

proc main() {
    var foo: Foo!(float, 16);
    pointer_proc(&foo);

    var slice1: []Foo!(float, 16);
    var slice2: []Foo!(float, 8);
    slice_proc(slice1);
    slice_proc(slice2);

    var arr: [4]^Foo!(float, 16);
    array_proc(arr);
    array_proc_fixed(arr);

    var arr2: [2]^Foo!(float, 16);
    array_proc(arr2);
}
